name: Build and Release ISOs

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Nix
        uses: cachix/install-nix-action@v27

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Update flake.lock
        run: nix flake update --commit-lock-file --accept-flake-config

      - name: Build cosmicIso
        id: build_cosmicIso
        run: nix --experimental-features 'nix-command flakes' build .#nixosConfigurations.cosmicIso.config.system.build.isoImage --accept-flake-config

      - name: Get build output path
        id: get_output_path
        run: echo "ISO_PATH=$(nix path-info .#nixosConfigurations.cosmicIso.config.system.build.isoImage)/iso/cosmicIso.iso" >> $GITHUB_ENV

      - name: Upload cosmicIso to release
        uses: actions/upload-artifact@v3
        with:
          name: cosmicIso
          path: ${{ env.ISO_PATH }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: cosmicIso
          path: ./cosmicIso.iso

      - name: Extract tag name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload cosmicIso to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cosmicIso.iso
          asset_name: cosmicIso.iso
          asset_content_type: application/octet-
