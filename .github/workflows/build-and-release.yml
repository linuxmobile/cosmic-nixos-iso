name: Build and Release ISOs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Nix
        uses: cachix/install-nix-action@v27

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Update flake.lock
        run: nix flake update --commit-lock-file --accept-flake-config

      - name: Build cosmicIso
        id: build_cosmicIso
        run: |
          nix --experimental-features 'nix-command flakes' build .#nixosConfigurations.cosmicIso.config.system.build.isoImage --accept-flake-config
          echo "ISO_PATH=$(readlink -f result/iso/*.iso)" >> $GITHUB_ENV

      - name: Generate tag
        id: generate_tag
        run: echo "NEW_TAG=v$(date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false

      - name: Upload cosmicIso to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ISO_PATH }}
          asset_name: cosmicIso.iso
          asset_content_type: application/octet-stream
